# Core/Error
# AMSTEL_SOURCES_CORE_ERROR
set(AMSTEL_SOURCES_CORE_ERROR_COMMON_HPP
	${CMAKE_CURRENT_SOURCE_DIR}/Error.h
)

set(AMSTEL_SOURCES_CORE_ERROR_COMMON_CPP
	${CMAKE_CURRENT_SOURCE_DIR}/Error.cpp
)

set(AMSTEL_SOURCES_CORE_ERROR_PLATFORM_SPECIFIC_CPP)

if (${CMAKE_SYSTEM_NAME} STREQUAL "Android")
	set(AMSTEL_SOURCES_CORE_ERROR_ANDROID
		${CMAKE_CURRENT_SOURCE_DIR}/Android/Callstack_Android.cpp
	)
	list(APPEND AMSTEL_SOURCES_CORE_ERROR_PLATFORM_SPECIFIC_CPP ${AMSTEL_SOURCES_CORE_ERROR_ANDROID})
endif() # ${CMAKE_SYSTEM_NAME} STREQUAL "Android"

if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    set(AMSTEL_SOURCES_CORE_ERROR_LINUX
		${CMAKE_CURRENT_SOURCE_DIR}/Linux/Callstack_Linux.cpp
	)
	list(APPEND AMSTEL_SOURCES_CORE_ERROR_PLATFORM_SPECIFIC_CPP ${AMSTEL_SOURCES_CORE_ERROR_LINUX})
endif() # ${CMAKE_SYSTEM_NAME} STREQUAL "Linux"

if (${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
    set(AMSTEL_SOURCES_CORE_ERROR_WINDOWS
		${CMAKE_CURRENT_SOURCE_DIR}/Windows/Callstack_Windows.cpp
	)
	list(APPEND AMSTEL_SOURCES_CORE_ERROR_PLATFORM_SPECIFIC_CPP ${AMSTEL_SOURCES_CORE_ERROR_WINDOWS})
endif() # ${CMAKE_SYSTEM_NAME} STREQUAL "Windows"

set(AMSTEL_SOURCES_CORE_ERROR_HPP
	${AMSTEL_SOURCES_CORE_ERROR_COMMON_HPP}
	${AMSTEL_SOURCES_CORE_ERROR_PLATFORM_SPECIFIC}
)

set(AMSTEL_SOURCES_CORE_ERROR_HPP
	${AMSTEL_SOURCES_CORE_ERROR_HPP}
	
	PARENT_SCOPE
)

set(AMSTEL_SOURCES_CORE_ERROR_CPP
	${AMSTEL_SOURCES_CORE_ERROR_COMMON_CPP}
	${AMSTEL_SOURCES_CORE_ERROR_PLATFORM_SPECIFIC_CPP}
)

set(AMSTEL_SOURCES_CORE_ERROR_CPP
	${AMSTEL_SOURCES_CORE_ERROR_CPP}
	
	PARENT_SCOPE
)

set(AMSTEL_SOURCES_CORE_ERROR
	${AMSTEL_SOURCES_CORE_ERROR_HPP}
	${AMSTEL_SOURCES_CORE_ERROR_CPP}
)

set(AMSTEL_SOURCES_CORE_ERROR
	${AMSTEL_SOURCES_CORE_ERROR}
	
	PARENT_SCOPE
)
cmake_minimum_required(VERSION 3.10.2)

set(TARGET_NAME AmstelCore)
if(TARGET ${TARGET_NAME})
    return()
endif()

project(${TARGET_NAME} CXX)

## AMSTEL_SOURCES_CORE
set(AMSTEL_SOURCES_CORE_HPP)
set(AMSTEL_SOURCES_CORE_CPP)
set(AMSTEL_SOURCES_CORE)

# Core/Containers
# AMSTEL_SOURCES_CORE_CONTAINERS
set(AMSTEL_SOURCES_CORE_CONTAINERS_HPP)
set(AMSTEL_SOURCES_CORE_CONTAINERS_CPP)
set(AMSTEL_SOURCES_CORE_CONTAINERS)
add_subdirectory(Containers)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_CONTAINERS_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_CONTAINERS_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_CONTAINERS})
source_group("Containers" FILES ${AMSTEL_SOURCES_CORE_CONTAINERS})

# Core/Error
# AMSTEL_SOURCES_CORE_ERROR
set(AMSTEL_SOURCES_CORE_ERROR_HPP)
set(AMSTEL_SOURCES_CORE_ERROR_CPP)
set(AMSTEL_SOURCES_CORE_ERROR)
add_subdirectory(Error)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_ERROR_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_ERROR_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_ERROR})
source_group("Error" FILES ${AMSTEL_SOURCES_CORE_ERROR})

# Core/FileSystem
# AMSTEL_SOURCES_CORE_FILE_SYSTEM
set(AMSTEL_SOURCES_CORE_FILE_SYSTEM_HPP)
set(AMSTEL_SOURCES_CORE_FILE_SYSTEM_CPP)
set(AMSTEL_SOURCES_CORE_FILE_SYSTEM)
add_subdirectory(FileSystem)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_FILE_SYSTEM_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_FILE_SYSTEM_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_FILE_SYSTEM})
source_group("FileSystem" FILES ${AMSTEL_SOURCES_CORE_FILE_SYSTEM})

# Core/Json
# AMSTEL_SOURCES_CORE_JSON
set(AMSTEL_SOURCES_CORE_JSON_HPP)
set(AMSTEL_SOURCES_CORE_JSON_CPP)
set(AMSTEL_SOURCES_CORE_JSON)
add_subdirectory(Json)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_JSON_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_JSON_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_JSON})
source_group("Json" FILES ${AMSTEL_SOURCES_CORE_JSON})

# Core/Math
# AMSTEL_SOURCES_CORE_MATH
set(AMSTEL_SOURCES_CORE_MATH_HPP)
set(AMSTEL_SOURCES_CORE_MATH_CPP)
set(AMSTEL_SOURCES_CORE_MATH)
add_subdirectory(Math)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_MATH_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_MATH_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_MATH})
source_group("Math" FILES ${AMSTEL_SOURCES_CORE_MATH})

# Core/Memory
# AMSTEL_SOURCES_CORE_MEMORY
set(AMSTEL_SOURCES_CORE_MEMORY_HPP)
set(AMSTEL_SOURCES_CORE_MEMORY_CPP)
set(AMSTEL_SOURCES_CORE_MEMORY)
add_subdirectory(Memory)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_MEMORY_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_MEMORY_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_MEMORY})
source_group("Memory" FILES ${AMSTEL_SOURCES_CORE_MEMORY})

# Core/Network
# AMSTEL_SOURCES_CORE_NETWORK
set(AMSTEL_SOURCES_CORE_NETWORK_HPP)
set(AMSTEL_SOURCES_CORE_NETWORK_CPP)
set(AMSTEL_SOURCES_CORE_NETWORK)
add_subdirectory(Network)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_NETWORK_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_NETWORK_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_NETWORK})
source_group("Network" FILES ${AMSTEL_SOURCES_CORE_NETWORK})

# Core/Strings
# AMSTEL_SOURCES_CORE_STRINGS
set(AMSTEL_SOURCES_CORE_STRINGS_HPP)
set(AMSTEL_SOURCES_CORE_STRINGS_CPP)
set(AMSTEL_SOURCES_CORE_STRINGS)
add_subdirectory(Strings)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_STRINGS_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_STRINGS_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_STRINGS})
source_group("Strings" FILES ${AMSTEL_SOURCES_CORE_STRINGS})

# Core/Thread
# AMSTEL_SOURCES_CORE_THREAD
set(AMSTEL_SOURCES_CORE_THREAD_HPP)
set(AMSTEL_SOURCES_CORE_THREAD_CPP)
set(AMSTEL_SOURCES_CORE_THREAD)
add_subdirectory(Thread)
list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_THREAD_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_THREAD_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_THREAD})
source_group("Thread" FILES ${AMSTEL_SOURCES_CORE_THREAD})

set(AMSTEL_SOURCES_CORE_ROOT_HPP
${CMAKE_CURRENT_SOURCE_DIR}/CommandLine.h
${CMAKE_CURRENT_SOURCE_DIR}/ConsoleServer.h
${CMAKE_CURRENT_SOURCE_DIR}/Config.h
${CMAKE_CURRENT_SOURCE_DIR}/Functional.h
${CMAKE_CURRENT_SOURCE_DIR}/Guid.h
${CMAKE_CURRENT_SOURCE_DIR}/Log.h
${CMAKE_CURRENT_SOURCE_DIR}/LogToFile.h
${CMAKE_CURRENT_SOURCE_DIR}/Murmur.h
${CMAKE_CURRENT_SOURCE_DIR}/Os.h
${CMAKE_CURRENT_SOURCE_DIR}/Pair.h
${CMAKE_CURRENT_SOURCE_DIR}/Platform.h
${CMAKE_CURRENT_SOURCE_DIR}/Profiler.h
${CMAKE_CURRENT_SOURCE_DIR}/Types.h
)

set(AMSTEL_SOURCES_CORE_ROOT_CPP
${CMAKE_CURRENT_SOURCE_DIR}/CommandLine.cpp
${CMAKE_CURRENT_SOURCE_DIR}/ConsoleServer.cpp
${CMAKE_CURRENT_SOURCE_DIR}/Guid.cpp
${CMAKE_CURRENT_SOURCE_DIR}/Log.cpp
${CMAKE_CURRENT_SOURCE_DIR}/LogToFile.cpp
${CMAKE_CURRENT_SOURCE_DIR}/Murmur.cpp
${CMAKE_CURRENT_SOURCE_DIR}/Os.cpp
${CMAKE_CURRENT_SOURCE_DIR}/Profiler.cpp
)

list(APPEND AMSTEL_SOURCES_CORE_HPP ${AMSTEL_SOURCES_CORE_ROOT_HPP})
list(APPEND AMSTEL_SOURCES_CORE_CPP ${AMSTEL_SOURCES_CORE_ROOT_CPP})
list(APPEND AMSTEL_SOURCES_CORE ${AMSTEL_SOURCES_CORE_ROOT_HPP} ${AMSTEL_SOURCES_CORE_ROOT_CPP})
source_group("Core" FILES ${AMSTEL_SOURCES_CORE_ROOT_HPP} ${AMSTEL_SOURCES_CORE_ROOT_CPP})

list(APPEND AMSTEL_SOURCES_CORE ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/..)
add_library(${TARGET_NAME} ${AMSTEL_SOURCES_CORE_CPP} ${AMSTEL_SOURCES_CORE_HPP})

target_include_directories(${TARGET_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/..)

set_target_properties(${TARGET_NAME} PROPERTIES PREFIX "lib" DEBUG_POSTFIX "D")
target_compile_definitions(${TARGET_NAME} PRIVATE 
		"-D_CRT_SECURE_NO_WARNINGS" 
		"-D__STDC_FORMAT_MACROS" 
)